// Author: Philip Metzger
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3"

import "google/protobuf/timestamp.proto"

package differential.v1;

// This message describes a Differential Revision.
// Which is backed by git, svn or hg.
//
// Next ID: 4
message Revision {
  // The Title of the revision.
  // Inferred from value, iff empty.
  string title = 1;
  // The description of the change.
  // Up to 500 Characters long.
  string description = 2;
  // Describes the state of the Revision.
  // 
  // Next ID: 7
  enum State {
    // Local Revisions are just local commits.
    LOCAL = 0
    // A private revision is sent by arc diff, but marked private
    // in the web ui.
    PRIVATE = 1;
    // A public revision is published by arc diff and indexed for reviews.
    PUBLIC = 2;
    // This revision is unreviewed. Marker for reviewers.
    UNREVIEWED = 3;
    // A reviewer added a comment via the Web UI.
    NEEDS_CHANGE = 4;
    // This revision is reviewed. Marker for reviewers.
    REVIEWED = 5;
    // This revision is approved and ready to land in trunk.
    APPROVED = 6; 
    // This revision landed in trunk.
    LANDED = 7;
  }
  // Describes the state of the revision.
  // To send it to Differential, it must be either `PRIVATE` or `PUBLIC`.
  // To land it use `arc land` or `arc submit`.
  State state = 3;
  // Describes the underlying type for this repository.
  oneof value {
    GitCommit git = 4;
    HgRevsison hg = 5;
    SvnCommit svn = 6;
  }
}


// This describes a patch.
//
// Next ID: 5
message Patch {
  // The generated raw diff. 
  bytes diff = 2;
  // Size of the raw diff.  
  uint64 size = 3;
  // Describes files, which are affected by this patch.
  // They must be relative to the project root.
  // `../src/differential/engine/DifferentialEngine.php`
  repeated string affected_files = 4;

}

// This roughly describes a git commit.
//
// Next ID: 6
message GitCommit {
  // The 40 byte sha256 of the commit.
  bytes sha_id = 1;
  // The author field of the git commit.
  string author = 2,
  // The Title, e.g the first 52-72 characters in the commit.
  string title = 3;
  // The Body of the commit, anything that follows the title. Up to 500 bytes.
  string body = 4;
  // The patch for the commit.
  Patch patch = 5;

}

// A Mercurial or Mononoke Revision.
// Most of the description was taken from the Mercurial Wiki.
// See the deprectated wiki for more info. 
//
// Next ID: N
message HgRevision {
  // The associated Mercurial Revision.
  int32 id = 1;
  // The associated Mercurial Node-ID.
  // Like the git, a 40 byte sha256 from all affected files.
  bytes node_id = 2;
  // Describes a the Author field.
  message Author {
    // Name of the Author.
    string name = 1;
    // Email of the Author.
    string email = 2;
  }
  // Author of this Revision.
  Author author = 2;
  // When was this Revision created, extracted from hg commit.
  google.protobuf.Timestamp creation_time = 3;
  // A IANA Timezone extracted from hg.
  string timezone = 4;
  // The Branch this Revision targets.
  optional string branch = 5;
  // The Revision title, extracted from the first 500 lines of the commit.
  string title = 6; 
  // The commit description.
  string body = 7;
}

// This roughly describes a Subversion Revision.
//
// Next ID: 6
message SvnCommit {
  // The revisions id on the server, e.g `r1353235`.
  int32 id = 1;
  // The author of the change, e.g `r@haber.com`
  string author = 2;
  // Title of the change.
  string title = 3;
  // The commits body, up to 500 characters.
  string body = 4;
  // The modification body.
  oneof modified {
    // If the revision was made for a subdir `../src/media/`
    string directory = 5;
    // The file the revision was created for `../media/mpeg_decoder.rs`
    string file = 6;
  }
  // The patch generated by svn diff.
  // For `modified.directory` all files must be in the same directory.
  Patch patch = 5;

}
