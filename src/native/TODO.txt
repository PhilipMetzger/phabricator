This list is ordered by prio:
Read up on the Json-RPC Schema of Phabricator 
(Done for: Harbormaster, TODO: Differential,Diffusion)
Transform it to a matching gRPC schema
(Done for: HarborMaster, TODO: Differential,Diffusion)
Add v1, ongoing.
Vendor protoc,grpc,phpcpp and gtest.
Flesh out Metrics, for the common endpoints.

Find out how to fix the communication of per-Process (PHP) vs per-Thread or State (C++)
Implement phabricator startup and base in c++.
This is currently escalated to writing a full http server.
This removes the proxy requirement for running, e.g ngnix, envoy or caddy. 
./phabricator --> ./phabbin => http-server 
                   php-source <--> c++ impl 

Move Arcanist back into the Repository.
Arc-go, Go makes it quite easy to write a gRPC clients, which are small.
Initial API for /flagz, which should be flags.proto

Diffusion improvements:
Support git push https://your.instance/refs/HEAD as a way to create Diffs.
Make the workflow perforce like, p4 add, p4 submit, p4 integrate
Add cpp implementation of the git protocol. 
Add cpp impl of the hg protocol. 
add cpp impl of the mononoke protocol, (AFAIU, its a thrifty variation of hg) 
4Fun Perforce Support, see the perforce API

Far away: 
gRPC Cluster support, AFAIU phab currently does clusters via MySQL.
Artifactory, Application for deployment artifacts.
